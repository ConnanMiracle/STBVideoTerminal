/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.imshello.baseWRAP;

public class ProxyVideoConsumer extends ProxyPlugin {
  private long swigCPtr;

  protected ProxyVideoConsumer(long cPtr, boolean cMemoryOwn) {
    super(baseWRAPJNI.ProxyVideoConsumer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ProxyVideoConsumer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        baseWRAPJNI.delete_ProxyVideoConsumer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean setDisplaySize(long nWidth, long nHeight) {
    return baseWRAPJNI.ProxyVideoConsumer_setDisplaySize(swigCPtr, this, nWidth, nHeight);
  }

  public long getDisplayWidth() {
    return baseWRAPJNI.ProxyVideoConsumer_getDisplayWidth(swigCPtr, this);
  }

  public long getDisplayHeight() {
    return baseWRAPJNI.ProxyVideoConsumer_getDisplayHeight(swigCPtr, this);
  }

  public long getDecodedWidth() {
    return baseWRAPJNI.ProxyVideoConsumer_getDecodedWidth(swigCPtr, this);
  }

  public long getDecodedHeight() {
    return baseWRAPJNI.ProxyVideoConsumer_getDecodedHeight(swigCPtr, this);
  }

  public void setCallback(ProxyVideoConsumerCallback pCallback) {
    baseWRAPJNI.ProxyVideoConsumer_setCallback(swigCPtr, this, ProxyVideoConsumerCallback.getCPtr(pCallback), pCallback);
  }

  public boolean setAutoResizeDisplay(boolean bAutoResizeDisplay) {
    return baseWRAPJNI.ProxyVideoConsumer_setAutoResizeDisplay(swigCPtr, this, bAutoResizeDisplay);
  }

  public boolean getAutoResizeDisplay() {
    return baseWRAPJNI.ProxyVideoConsumer_getAutoResizeDisplay(swigCPtr, this);
  }

  public boolean setConsumeBuffer(java.nio.ByteBuffer pConsumeBufferPtr, long nConsumeBufferSize) {
    return baseWRAPJNI.ProxyVideoConsumer_setConsumeBuffer(swigCPtr, this, pConsumeBufferPtr, nConsumeBufferSize);
  }

  public long pull(java.nio.ByteBuffer pOutput, long nSize) {
    return baseWRAPJNI.ProxyVideoConsumer_pull(swigCPtr, this, pOutput, nSize);
  }

  public boolean reset() {
    return baseWRAPJNI.ProxyVideoConsumer_reset(swigCPtr, this);
  }

  public java.math.BigInteger getMediaSessionId() {
    return baseWRAPJNI.ProxyVideoConsumer_getMediaSessionId(swigCPtr, this);
  }

  public static boolean registerPlugin() {
    return baseWRAPJNI.ProxyVideoConsumer_registerPlugin();
  }

  public static void setDefaultChroma(tmedia_chroma_t eChroma) {
    baseWRAPJNI.ProxyVideoConsumer_setDefaultChroma(eChroma.swigValue());
  }

  public static void setDefaultAutoResizeDisplay(boolean bAutoResizeDisplay) {
    baseWRAPJNI.ProxyVideoConsumer_setDefaultAutoResizeDisplay(bAutoResizeDisplay);
  }

}
